datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  password  String
  firstname String?
  lastname  String?
  posts     Post[]
  role      Role
}

model Post {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean
  title     String
  content   String?
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
}

enum Role {
  ADMIN
  USER
}

model Game {
  id           String        @id @default(cuid())
  gameSlug     String
  gameTitle    String
  thumbnailUrl String
  maps         Map[]
  markerGroups MarkerGroup[]
}

model Map {
  id           String           @id @default(cuid())
  mapSlug      String
  mapTitle     String
  thumbnailUrl String
  minZoom      Int
  maxZoom      Int
  defaultZoom  Int
  tilePath     String
  Game         Game?            @relation(fields: [gameId], references: [id])
  gameId       String?
  locations    MarkerLocation[]
}

model MarkerGroup {
  id         Int              @id @default(autoincrement())
  title      String
  Game       Game?            @relation(fields: [gameId], references: [id])
  gameId     String?
  categories MarkerCategory[]
}

model MarkerCategory {
  id            Int          @id @default(autoincrement())
  MarkerGroup   MarkerGroup? @relation(fields: [markerGroupId], references: [id])
  markerGroupId Int?
  title         String       @default("")
  icon          String
  template      String?
}

model MarkerLocation {
  id          Int     @id @default(autoincrement())
  title       String
  description String?
  latitude    String
  longitude   String
  Map         Map?    @relation(fields: [mapId], references: [id])
  mapId       String?
}
