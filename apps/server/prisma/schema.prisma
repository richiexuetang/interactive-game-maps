datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  password  String
  firstName String?
  lastName  String?
  role      Role
}

enum Role {
  ADMIN
  USER
}

model Game {
  id           Int           @id @default(autoincrement())
  slug         String        @unique
  title        String
  thumbnailUrl String
  regions      Region[]
  groups       MarkerGroup[]
}

model Region {
  id           Int              @id @default(autoincrement())
  slug         String           @unique
  title        String
  thumbnailUrl String
  minZoom      Int
  maxZoom      Int
  defaultZoom  Int
  center       Decimal[]
  tilePath     String
  Game         Game?            @relation(fields: [gameSlug], references: [slug])
  gameSlug     String?
  locations    MarkerLocation[]
  order        Int              @default(1)
}

model MarkerGroup {
  id         Int              @id @default(autoincrement())
  title      String
  Game       Game?            @relation(fields: [gameSlug], references: [slug])
  gameSlug   String?
  categories MarkerCategory[]
}

model MarkerCategory {
  id            Int              @id @default(autoincrement())
  markerGroupId Int?
  title         String           @default("")
  icon          String
  template      String?
  info          String?
  locations     MarkerLocation[]
  MarkerGroup   MarkerGroup?     @relation(fields: [markerGroupId], references: [id])
}

model MarkerLocation {
  id          Int             @id @default(autoincrement())
  title       String
  description String?
  latitude    Decimal
  longitude   Decimal
  category    MarkerCategory? @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  Region      Region?         @relation(fields: [regionSlug], references: [slug])
  regionSlug  String?
}
