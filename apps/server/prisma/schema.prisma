datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pg_trgm, postgis]
}

generator client {
  previewFeatures = ["postgresqlExtensions"]
  provider        = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model AppUser {
  id             String   @id @default(cuid())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  email          String   @unique
  firstName      String?
  lastName       String?
  photoUrl       String?
  foundLocations Int[]
  username       String?
  hideFound      Boolean  @default(false)
}

model Game {
  id          Int           @id @default(autoincrement())
  slug        String        @unique
  title       String
  regions     Region[]
  groups      MarkerGroup[]
  description String
  minZoom     Int
  maxZoom     Int
  zoom        Int
  center      Decimal[]
}

model Region {
  id           Int              @id @default(autoincrement())
  slug         String           @unique
  title        String
  thumbnailUrl String
  tilePath     String
  game         Game             @relation(fields: [gameSlug], references: [slug])
  gameSlug     String
  locations    MarkerLocation[]
  order        Int              @default(1)
  subRegions   SubRegion[]
}

model SubRegion {
  id          Int                                    @id @default(autoincrement())
  region      Region                                 @relation(fields: [regionSlug], references: [slug])
  regionSlug  String
  coordinates Unsupported("geometry(Polygon, 4326)")
  title       String
  locations   MarkerLocation[]
  slug        String                                 @unique

  @@index([coordinates], type: Gist)
}

model MarkerGroup {
  id         Int              @id @default(autoincrement())
  title      String
  game       Game             @relation(fields: [gameSlug], references: [slug])
  gameSlug   String
  categories MarkerCategory[]
}

model MarkerCategory {
  id          Int              @id @default(autoincrement())
  title       String
  icon        String
  info        String?
  locations   MarkerLocation[]
  groupId     Int?
  markerGroup MarkerGroup?     @relation(fields: [groupId], references: [id])
}

model MarkerLocation {
  id            Int             @id @default(autoincrement())
  title         String
  description   String?
  latitude      Decimal
  longitude     Decimal
  category      MarkerCategory? @relation(fields: [categoryId], references: [id])
  categoryId    Int?
  region        Region          @relation(fields: [regionSlug], references: [slug])
  regionSlug    String
  media         Media[]
  subRegion     SubRegion?      @relation(fields: [subRegionSlug], references: [slug])
  subRegionSlug String?
}

model Media {
  id               Int             @id @default(autoincrement())
  url              String
  type             String
  MarkerLocation   MarkerLocation? @relation(fields: [markerLocationId], references: [id])
  markerLocationId Int?
}
