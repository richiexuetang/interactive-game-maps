# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
  user: User!
}

input ChangePasswordInput {
  newPassword: String!
  oldPassword: String!
}

input CreateGameInput {
  slug: String!
  thumbnailUrl: String!
  title: String!
}

input CreatePostInput {
  content: String!
  title: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Game {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!
  slug: String!
  thumbnailUrl: String!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

input LoginInput {
  email: String!
  password: String!
}

type MarkerLocation {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  description: String
  id: ID!
  latitude: Float!
  longitude: Float!
  region: Region
  regionSlug: String
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type Mutation {
  changePassword(data: ChangePasswordInput!): User!
  createGame(data: CreateGameInput!): Game!
  createPost(data: CreatePostInput!): Post!
  login(data: LoginInput!): Auth!
  refreshToken(token: JWT!): Token!
  signup(data: SignupInput!): Auth!
  updateUser(data: UpdateUserInput!): User!
}

"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  asc
  desc
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Post {
  author: User
  content: String

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!
  published: Boolean!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type PostConnection {
  edges: [PostEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type PostEdge {
  cursor: String!
  node: Post!
}

input PostOrder {
  direction: OrderDirection!
  field: PostOrderField!
}

"""Properties by which post connections can be ordered."""
enum PostOrderField {
  content
  createdAt
  id
  published
  title
  updatedAt
}

type Query {
  findOneById(id: Float!): Game!
  findRegionsByGame(slug: String!): [Region!]!
  getByRegion(slug: String!): [MarkerLocation!]!
  getGames: [Game!]!
  me: User!
  post: Post!
  publishedPosts(orderBy: PostOrder, query: String): PostConnection!
  regionDetails(slug: String!): Region!
  userPosts: [Post!]!
}

type Region {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  defaultZoom: Float!
  gameSlug: String!
  id: ID!
  maxZoom: Float!
  minZoom: Float!
  slug: String!
  thumbnailUrl: String!
  tilePath: String!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

"""User role"""
enum Role {
  ADMIN
  USER
}

input SignupInput {
  email: String!
  firstname: String
  lastname: String
  password: String!
}

type Subscription {
  postCreated: Post!
}

type Token {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
}

input UpdateUserInput {
  firstname: String
  lastname: String
}

type User {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  email: String!
  firstname: String
  id: ID!
  lastname: String
  posts: [Post!]
  role: Role!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}