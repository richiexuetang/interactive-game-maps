# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddNoteInput {
  description: String!
  email: String!
  latitude: Float!
  longitude: Float!
  regionSlug: String!
  title: String!
}

type AppUser {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  email: String!
  firstName: String
  foundLocations: [Int!]
  hideFound: Boolean!
  id: String!
  lastName: String
  noteMarkers: [NoteMarker!]
  photoUrl: String

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

input CreateUserInput {
  email: String!
  firstName: String
  lastName: String
  photoUrl: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Game {
  center: [Float!]!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  description: String
  groups: [MarkerGroup!]
  id: Float!
  maxZoom: Float!
  minZoom: Float!
  regions: [Map!]
  slug: String!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  zoom: Float!
}

type Map {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  gameSlug: String!
  id: Float!
  locations: [MarkerLocation!]
  order: Float!
  regions: [SubRegion!]
  slug: String!
  thumbnailUrl: String
  tilePath: String!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type MarkerCategory {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  icon: String!
  id: Float!
  info: String
  locations: [MarkerLocation!]
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type MarkerGroup {
  categories: [MarkerCategory!]

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  game: Game
  gameSlug: String
  id: Float!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type MarkerLocation {
  category: MarkerCategory
  categoryId: Float

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  description: String
  id: Float!
  latitude: Float!
  longitude: Float!
  media: [Media!]
  region: Map
  regionSlug: String!
  subRegionSlug: String
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type Media {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: Float!
  markerLocation: MarkerLocation
  markerLocationId: Float
  type: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  url: String!
}

type Mutation {
  addFoundLocations(data: UpdateFoundLocationInput!): AppUser!
  addNoteMarker(data: AddNoteInput!): AppUser!
  createUser(data: CreateUserInput!): AppUser
  removeFoundLocation(data: UpdateFoundLocationInput!): AppUser!
  removeNoteMarker(data: RemoveNoteInput!): AppUser!
  toggleHideFoundSetting(data: UpdateHideFoundInput!): AppUser!
}

type NoteMarker {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  description: String!
  id: Float!
  latitude: Float!
  longitude: Float!
  regionSlug: String!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  asc
  desc
}

type Query {
  fetchGameByRegion(slug: String!): Game!
  findRegionsByGame(orderBy: RegionOrder, slug: String!): [Map!]!
  game(slug: String!): Game!
  games: [Game!]!
  getGroupsByGameSlug(slug: String!): [MarkerGroup!]!
  getSubRegionsByRegion(slug: String!): [SubRegion!]!
  getUser(email: String!): AppUser!
  locations(regionSlug: String): [MarkerLocation!]!
  regionDetails(slug: String!): Map!
}

input RegionOrder {
  direction: OrderDirection!
  field: RegionOrderField!
}

"""Properties by which region connections can be ordered."""
enum RegionOrderField {
  id
  order
  title
}

input RemoveNoteInput {
  email: String!
  id: Float!
}

type SubRegion {
  coordinates: [[[Float!]!]!]

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: Float!
  locations: [MarkerLocation!]!
  regionSlug: String!
  slug: String!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

input UpdateFoundLocationInput {
  email: String!
  location: Float!
}

input UpdateHideFoundInput {
  email: String!
  hide: Boolean!
}