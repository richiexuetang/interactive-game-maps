# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
  user: User!
}

input ChangePasswordInput {
  newPassword: String!
  oldPassword: String!
}

input CreateGameInput {
  slug: String!
  thumbnailUrl: String!
  title: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Game {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  groups: [MarkerGroup!]
  id: ID!
  regions: [Region!]
  slug: String!
  thumbnailUrl: String!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

input LoginInput {
  email: String!
  password: String!
}

type MarkerCategory {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  icon: String
  id: ID!
  info: String
  locations: [MarkerLocation!]
  template: String
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type MarkerGroup {
  categories: [MarkerCategory!]

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  game: Game
  gameSlug: String
  id: ID!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type MarkerLocation {
  category: MarkerCategory
  categoryId: Float

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  description: String
  id: ID!
  latitude: Float!
  longitude: Float!
  region: Region
  regionSlug: String
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type Mutation {
  changePassword(data: ChangePasswordInput!): User!
  createGame(data: CreateGameInput!): Game!
  login(data: LoginInput!): Auth!
  refreshToken(token: JWT!): Token!
  signup(data: SignupInput!): Auth!
  updateUser(data: UpdateUserInput!): User!
}

type Query {
  findByRegionId(id: Float!): [MarkerGroup!]!
  findCategoryById(id: Float!): MarkerCategory!
  findOne(id: Float!): MarkerCategory!
  findOneById(id: Float!): Game!
  findRegionsByGame(slug: String!): [Region!]!
  games: [Game!]!
  getGroupsByGameSlug(slug: String!): [MarkerGroup!]!
  getLocationByRegion(slug: String!): [MarkerLocation!]!
  groups: [MarkerGroup!]!
  me: User!
  regionDetails(slug: String!): Region!
}

type Region {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  defaultZoom: Float!
  gameSlug: String!
  id: ID!
  maxZoom: Float!
  minZoom: Float!
  slug: String!
  thumbnailUrl: String!
  tilePath: String!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

"""User role"""
enum Role {
  ADMIN
  USER
}

input SignupInput {
  email: String!
  firstName: String
  lastName: String
  password: String!
}

type Token {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
}

input UpdateUserInput {
  firstName: String
  lastName: String
}

type User {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  email: String!
  firstName: String
  id: ID!
  lastName: String
  locations: [MarkerLocation!]
  role: Role!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}